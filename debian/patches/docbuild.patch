Index: slime/doc/Makefile
===================================================================
--- slime.orig/doc/Makefile
+++ slime/doc/Makefile
@@ -7,6 +7,7 @@
 # installed their emacs from source probably have a GCS-ish file
 # hierarchy.
 infodir=/usr/local/info
+HOME=$(CURDIR)
 
 # What command to use to install info file(s)
 INSTALL_CMD=install -m 644
@@ -26,10 +27,10 @@ html/index.html   generate on html file
 html.tgz          create a tarball of all html files\n\
 clean             remove generated files"
 
-all: slime.info slime.pdf html/index.html
+all: slime.ps slime.info slime.html slime.pdf html/index.html slime-refcard.pdf
 
 slime.dvi: $(TEXI)
-	texi2dvi slime.texi
+	HOME=$(HOME) texi2dvi slime.texi
 
 slime.ps: slime.dvi
 	dvips -o $@ $<
@@ -53,7 +54,10 @@ publish: slime.pdf html.tgz
 	ssh $(CLUSER)@common-lisp.net "cd $(DOCDIR); tar -zxf html.tgz"
 
 slime.pdf: $(TEXI)
-	texi2pdf $<
+	HOME=$(HOME) texi2pdf $<
+
+slime-refcard.pdf: slime-refcard.tex
+	HOME=$(HOME) texi2pdf $<	
 
 install: install-info
 
@@ -103,10 +107,11 @@ uninstall-info:
 		install-info --infodir="$(infodir)" --remove "$(infodir)/$(infofiles)" || :; fi
 	rm -f $(infodir)/$(infofiles)
 
+SHELL=/bin/bash
+
 clean:
 	rm -f contributors.texi
-	rm -f slime.aux slime.cp slime.cps slime.fn slime.fns slime.ky
-	rm -f slime.kys slime.log slime.pg slime.tmp slime.toc slime.tp
-	rm -f slime.vr slime.vrs
-	rm -f slime.info slime.pdf slime.dvi slime.ps slime.html
-	rm -rf html html.tgz
+	rm -f slime.{aux,cp,cps,fn,fns,ky,kys,log,pg,tmp,toc,tp,vr,vrs}
+	rm -f slime.{info,pdf,dvi,ps,html,kys,fns,vrs}
+	rm -f slime-refcard.{aux,log,pdf}
+	rm -rf html{,.tgz} .texmf-var
Index: slime/doc/slime.texi
===================================================================
--- slime.orig/doc/slime.texi
+++ slime/doc/slime.texi
@@ -1259,8 +1259,7 @@ Fetch all inspector contents and go to t
 Store the value under point in the variable `*'.  This can
 then be used to access the object in the REPL.
 
-@kbditempair{TAB, S-TAB, slime-inspector-next-inspectable-object,
-slime-inspector-previous-inspectable-object}
+@kbditempair{TAB, S-TAB, slime-inspector-next-inspectable-object, slime-inspector-previous-inspectable-object}
 
 Jump to the next and previous inspectable object respectively.
 
@@ -2332,8 +2331,7 @@ Bash.
 
 @table @kbd
 
-@kbditempair{C-<up>, C-<down>,
-             slime-repl-forward-input, slime-repl-backward-input}
+@kbditempair{C-<up>, C-<down>, slime-repl-forward-input, slime-repl-backward-input}
 Go to the next/previous history item.
 
 @kbditempair{M-n, M-p, slime-repl-next-input, slime-repl-previous-input}
@@ -2342,16 +2340,14 @@ input as search pattern.  If @kbd{M-n}/@
 a row, the second invocation uses the same search pattern (even if the
 current input has changed).
 
-@kbditempair{M-s, M-r,
-slime-repl-next-matching-input, slime-repl-previous-matching-input}
+@kbditempair{M-s, M-r, slime-repl-next-matching-input, slime-repl-previous-matching-input}
 Search forward/reverse through command history with regex
 
 @c @code{slime-repl-@{next,previous@}-input}@*
 @c @code{slime-repl-@{next,previous@}-matching-input}@*
 @c @code{comint}-style input history commands.
 
-@kbditempair{C-c C-n, C-c C-p,
-slime-repl-next-prompt, slime-repl-previous-prompt}
+@kbditempair{C-c C-n, C-c C-p, slime-repl-next-prompt, slime-repl-previous-prompt}
 Move between the current and previous prompts in the @REPL{} buffer.
 Pressing RET on a line with old input copies that line to the newest
 prompt.
