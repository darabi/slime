Index: slime/slime.el
===================================================================
--- slime.orig/slime.el	2010-02-20 22:25:53.000000000 +0100
+++ slime/slime.el	2010-02-20 22:25:56.000000000 +0100
@@ -117,7 +117,7 @@
     "Return the datestring of the latest entry in the ChangeLog file.
 Return nil if the ChangeLog file cannot be found."
     (interactive "p")
-    (let ((changelog (concat slime-path "ChangeLog"))
+    (let ((changelog "/usr/share/doc/cl-swank/changelog")
           (date nil))
       (when (file-exists-p changelog)
         (with-temp-buffer 
Index: slime/swank-loader.lisp
===================================================================
--- slime.orig/swank-loader.lisp	2010-02-20 22:25:49.000000000 +0100
+++ slime/swank-loader.lisp	2010-02-20 22:25:56.000000000 +0100
@@ -106,7 +106,7 @@
 (defun slime-version-string ()
   "Return a string identifying the SLIME version.
 Return nil if nothing appropriate is available."
-  (with-open-file (s (merge-pathnames "ChangeLog" *source-directory*)
+  (with-open-file (s "/usr/share/doc/cl-swank/changelog" 
                      :if-does-not-exist nil)
     (and s (symbol-name (read s)))))
 
@@ -123,10 +123,14 @@
 
 (defun binary-pathname (src-pathname binary-dir)
   "Return the pathname where SRC-PATHNAME's binary should be compiled."
+  (declare (ignore binary-dir))
   (let ((cfp (compile-file-pathname src-pathname)))
-    (merge-pathnames (make-pathname :name (pathname-name cfp)
-                                    :type (pathname-type cfp))
-                     binary-dir)))
+    (merge-pathnames (make-pathname 
+                      :directory
+                      `(:relative "swank" "fasl" ,(unique-dir-name))
+                      :name (pathname-name cfp)
+                      :type (pathname-type cfp))
+                     (clc:calculate-fasl-root))))
 
 (defun handle-swank-load-error (condition context pathname)
   (fresh-line *error-output*)
